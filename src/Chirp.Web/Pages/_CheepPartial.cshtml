@model Chirp.Web.Pages.PublicModel
@inject SignInManager<Author> SignInManager

@{
    var CheepOpinionInfo = @Model.CheepOpinionsInfo;
    var username = User.Identity?.Name;
}

<ul class="cheeps">
    @foreach (var cheep in @Model.Cheeps)
    {
        <li>
            <div class="cheep-wrapper">
                @* [TODO] If the user does NOT have a Profile Picture, put the default in its place. *@
                <div class="cheep-profilepicture-name-time">
                    <img src="/images/blank.png" alt="Profile Picture">
                    <div class="cheep-name-time">
                        <strong>
                            <a href="/@cheep.Author.UserName">@cheep.Author.UserName</a>
                        </strong>
                        <small>@cheep.TimeStamp</small>
                    </div>
                </div>

                @{
                    var co_Info = CheepOpinionInfo.GetValueOrDefault(cheep.CheepId);
                    int cheepNumLikes        = co_Info.NumLikes;
                    int cheepNumDislikes     = co_Info.NumDislikes;
                }

                <div class="cheep-text-wrapper">
                    <p>@cheep.Text</p>
                </div>

                <div class="cheep-number-likes-dislikes-wrapper">
                    <small><img src="/images/thumbup.svg" alt="Like"></img> @cheepNumLikes</small>
                    <small><img src="/images/thumbdown.svg" alt="Dislike"></img> @cheepNumDislikes</small>
                </div>

                <div class="cheep-func-wrapper">
                    @if(SignInManager.IsSignedIn(User) && username != cheep.Author.UserName)
                    {
                        var user = Model.SignedInAuthor;
                        var authorOpinionOfCheep = co_Info.AuthorCheepOpinion;

                        try
                        {
                            @* Change this to be more concise *@
                            <div class="cheep-func-grid-box">
                                <form id="followForm" method="post" asp-page-handler="Follow">
                                    @Html.AntiForgeryToken()
                                    @if(user.Following.Any() && user.Following.Contains<Author>(cheep.Author))
                                    {
                                        <input type="hidden" asp-for="IsFollow" value="false" />
                                        <input type="hidden" asp-for="TargetAuthorUserName" value="@cheep.Author.UserName" />
                                        <button type="submit" class="form-input-button btn" >
                                            <img id="unfollow" src="/images/unfollow.svg" alt="Unfollow"></img>
                                        </button>
                                    }
                                    else
                                    {
                                        <input type="hidden" asp-for="IsFollow" value="true" />
                                        <input type="hidden" asp-for="TargetAuthorUserName" value="@cheep.Author.UserName" />
                                        <button type="submit" class="form-input-button btn" >
                                            <img id="follow" src="/images/follow.svg" alt="Follow"></img>
                                        </button>
                                    }
                                </form>
                            </div>

                            <div class="cheep-func-grid-box">
                                <form id="likeDis" method="post" asp-page-handler="DislikeOrLike">
                                    <input type="hidden" asp-for="TargetCheepId" value="@cheep.CheepId" />
                                    <input type="hidden" asp-for="TargetAuthorUserName" value="@username" />
                                    <button type="submit" name="likeDis" value="like" class="form-input-button btn" style="@(authorOpinionOfCheep == Enums.ACO.AuthorCheepOpinion.DISLIKES ? "opacity: 0.5;" : "opacity: 1.0;")">
                                        <img src="/images/thumbup.svg" alt="Like"></img>
                                    </button>
                                    <button type="submit" name="likeDis" value="dislike" class="form-input-button btn" style="@(authorOpinionOfCheep == Enums.ACO.AuthorCheepOpinion.LIKES ? "opacity: 0.5;" : "opacity: 1.0;")">
                                        <img src="/images/thumbdown.svg" alt="Dislike"></img>
                                    </button>
                                </form>
                            </div>

                            <div class="cheep-func-grid-box">
                                <button class="form-input-button btn">
                                    <img src="/images/chat.svg" alt="Comments"></img>
                                </button>
                            </div>
                        } 
                        catch(Exception ex)
                        {
                            <p>Exception Message: @ex.Message</p>
                        }
                    }
                </div>
            </div>
        </li>
    }
</ul>